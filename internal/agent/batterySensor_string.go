// Code generated by "stringer -type=batteryDeviceClass,batteryType -output batterySensor_string.go"; DO NOT EDIT.

package agent

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[battery-0]
	_ = x[temperature-1]
	_ = x[power-2]
	_ = x[state-3]
}

const _batteryDeviceClass_name = "batterytemperaturepowerstate"

var _batteryDeviceClass_index = [...]uint8{0, 7, 18, 23, 28}

func (i batteryDeviceClass) String() string {
	if i < 0 || i >= batteryDeviceClass(len(_batteryDeviceClass_index)-1) {
		return "batteryDeviceClass(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _batteryDeviceClass_name[_batteryDeviceClass_index[i]:_batteryDeviceClass_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[unknown-4]
	_ = x[linePower-5]
	_ = x[generic-6]
	_ = x[ups-7]
	_ = x[monitor-8]
	_ = x[mouse-9]
	_ = x[keyboard-10]
	_ = x[pda-11]
	_ = x[phone-12]
}

const _batteryType_name = "unknownlinePowergenericupsmonitormousekeyboardpdaphone"

var _batteryType_index = [...]uint8{0, 7, 16, 23, 26, 33, 38, 46, 49, 54}

func (i batteryType) String() string {
	i -= 4
	if i < 0 || i >= batteryType(len(_batteryType_index)-1) {
		return "batteryType(" + strconv.FormatInt(int64(i+4), 10) + ")"
	}
	return _batteryType_name[_batteryType_index[i]:_batteryType_index[i+1]]
}
